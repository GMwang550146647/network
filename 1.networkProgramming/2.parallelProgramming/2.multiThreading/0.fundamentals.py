"""
线程（比进程重要）
    什么是线程 ：
        能被操作系统调度(给CPU执行)的最小单位
    同一个进程的多个线程同时被CPU执行？
        可能
    定义
        数据共享，操作系统调度最小单位，可以利用多核，操作系统调度，数据不安全，开启关闭切换时间开销少
    核心：
        减少io时间，纯cpu操作的没用
Cpython中的线程
    gc
        gc垃圾回收机制
            具体实现：引用计数+分代回收
    GIL（global interpreter lock)
        全局解释器锁的出现是为了完成gc的回收机制，这样就能保证引用计数的正常了（不然两个线程同时读取一个数，然后引用计数都+1（本来应该是加2），会导致内存被错误清除
            导致：同一个进程的多个线程只有一个线程真正被cpu执行
    节省的是io操作的时间，而是不是cpu的时间，cpu太快了
"""
if __name__ == '__main__':
    a=[1,2,3]
    b=a
    b[0]=1
    print(id(a))
    print(id(b))
